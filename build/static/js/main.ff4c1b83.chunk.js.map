{"version":3,"sources":["store/Actions/actions.js","pages/Login.js","store/Actions/AuthAcrtions.js","store/Actions/currencyActions.js","images/logo.svg","components/AppNavbar.js","store/Actions/portfolioActions.js","components/PurchaseModal.js","components/BuyingModal.js","components/SellingModal.js","components/PortfolioTable.js","pages/Home.js","pages/Register.js","App.js","serviceWorker.js","store/Reducers/authReducer.js","store/Reducers/currencyReducer.js","store/Reducers/portfolioReducer.js","store/store.js","store/Reducers/totalAssetsReducer.js","index.js"],"names":["USER_REGISTERED","USER_LOGOUT","LOGIN_SUCCESS","CURRENCY_LOADING","CURRENCY_LOADED","PORTFOLIO_START","CURRENCY_RATE","GET_TOTAL","Login","props","useState","logins","setLogins","attempt","setAttempt","dispatch","useDispatch","history","useHistory","name","setName","Alert","color","Form","className","onSubmit","e","preventDefault","user","JSON","parse","localStorage","getItem","type","payload","login","push","setTimeout","FormGroup","Label","for","Input","id","placeholder","onChange","target","value","Button","to","getCurrencyRate","selected","acronym","getState","console","log","axios","get","then","res","data","conversion_rates","AppNavbar","collapsed","setCollapsed","userName","useSelector","state","auth","Navbar","dark","expand","NavbarBrand","href","src","logo","alt","width","height","NavbarToggler","onClick","Collapse","style","isOpen","navbar","Nav","NavItem","NavLink","background","cursor","getPortfolio","portfolio","PurchaseModal","buttonLabel","rate","codes","rates","clickedCurrency","setClickedCurrency","amount","setAmount","alertZero","setZeroAlert","alertHigh","setAlertHigh","acronyms","portfolioData","map","modal","setModal","toggle","useEffect","Modal","ModalHeader","index","handleCurrency","ModalBody","copy","stringify","copyPortfolio","indexMain","findIndex","indexSelected","totalAsset","localPortfolio","setItem","updatePortfolio","BuyingModal","Number","toFixed","SellingModal","PortfolioTable","useMemo","columns","Header","accessor","d","Cell","row","original","useTable","useSortBy","usePagination","getTableProps","getTableBodyProps","headerGroups","prepareRow","nextPage","previousPage","page","canPreviousPage","canNextPage","borderRadius","headerGroup","getHeaderGroupProps","headers","column","getHeaderProps","getSortByToggleProps","paddingLeft","render","isSorted","isSortedDesc","getRowProps","cells","cell","getCellProps","textDecorationLine","Home","isLogin","lastUpdated","date","totalAssets","selectedCurrency","setSelectedCurrency","key","supported_codes","total","reduce","a","b","Math","round","local","size","onSelect","item","callback","record","Register","surname","setSurname","users","App","path","Boolean","window","location","hostname","match","initialState","isRegistered","loading","store","configureStore","reducer","action","Date","now","toUTCString","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"sSAAaA,EAAkB,kBAClBC,EAAc,eAEdC,EAAgB,gBAChBC,EAAmB,mBACnBC,EAAkB,kBAClBC,EAAkB,kBAClBC,EAAgB,gBAChBC,EAAY,Y,OC4DVC,EA5DD,SAACC,GAAW,IAAD,EACKC,oBAAS,GADd,mBAChBC,EADgB,KACRC,EADQ,OAEOF,oBAAS,GAFhB,mBAEhBG,EAFgB,KAEPC,EAFO,KAGjBC,EAAWC,cACXC,EAAUC,cAJO,EAMCR,mBAAS,IANV,mBAMhBS,EANgB,KAMVC,EANU,KAuBvB,OACE,sCACIT,GAAUE,EACV,cAACQ,EAAA,EAAD,CAAOC,MAAM,UAAb,yCACE,KAEJ,eAACC,EAAA,EAAD,CACEC,UAAU,gDACVC,SAvBiB,SAACC,GACtBA,EAAEC,iBACF,IAAMC,EAAOC,KAAKC,MAAMC,aAAaC,QAAQb,IACzCS,GACFb,ECOe,SAACa,GAAD,OAAU,SAACb,GAC9BA,EAAS,CAAEkB,KAAM/B,EAAegC,QAASN,KDR5BO,CAAMP,IACfX,EAAQmB,KAAK,OAEbxB,GAAU,GACVE,GAAW,GACXuB,YAAW,WACTvB,GAAW,KACV,OAUH,UAIE,uCACA,uBACA,eAACwB,EAAA,EAAD,CAAWd,UAAU,uBAArB,UACE,cAACe,EAAA,EAAD,CAAOC,IAAI,eAAehB,UAAU,UAApC,0BAIA,cAACiB,EAAA,EAAD,CACER,KAAK,OACLd,KAAK,OACLuB,GAAG,cACHC,YAAY,OACZC,SAtCe,SAAClB,GAAD,OAAON,EAAQM,EAAEmB,OAAOC,aAyC3C,cAACC,EAAA,EAAD,CAAQzB,MAAM,SAASE,UAAU,YAAjC,mBAEU,IACV,uBACA,cAAC,IAAD,CAAMA,UAAU,oBAAoBwB,GAAG,YAAvC,6BEtCKC,EAAkB,SAACC,EAAUC,GAAX,OAAuB,SAACpC,EAAUqC,GAC/DC,QAAQC,IAAIJ,GACZK,IACGC,IADH,6EAE0EN,EAAS,KAEhFO,MAAK,SAACC,GAAD,OACJ3C,EAAS,CACPkB,KAAM3B,EACN4B,QAASwB,EAAIC,KAAKC,iBAAiBT,UC/B5B,MAA0B,iC,uECiB5BU,EAAY,WAAO,IAAD,EACKnD,oBAAS,GADd,mBACtBoD,EADsB,KACXC,EADW,KAEvBhD,EAAWC,cACXgD,EAAWC,aAAY,SAACC,GAAD,OAAWA,EAAMC,KAAKvC,KAAKT,QAMxD,OACE,8BACE,eAACiD,EAAA,EAAD,CAAQ9C,MAAM,OAAO+C,MAAI,EAACC,OAAO,KAAK9C,UAAU,OAAhD,UACE,cAAC+C,EAAA,EAAD,CAAaC,KAAK,IAAIhD,UAAU,UAAhC,SACE,qBAAKiD,IAAKC,EAAMC,IAAI,MAAMC,MAAO,GAAIC,OAAQ,OAE/C,cAACC,EAAA,EAAD,CAAeC,QAVA,kBAAMhB,GAAcD,IAUGtC,UAAU,SAChD,cAACwD,EAAA,EAAD,CACExD,UAAU,2BACVyD,MAAO,CAAE3D,MAAO,OAChB4D,QAASpB,EACTqB,QAAM,EAJR,SAME,eAACC,EAAA,EAAD,CAAKD,QAAM,EAAX,UACE,eAACE,EAAA,EAAD,CAAS7D,UAAU,mDAAnB,UACE,cAAC,IAAD,CAAWF,MAAM,UACjB,cAACgE,EAAA,EAAD,CAASd,KAAK,IAAd,2BAA8BR,KAAsB,OAC3C,IACX,eAACqB,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CACEL,MAAO,CAAEM,WAAY,MAAOC,OAAQ,WACpChE,UAAU,wDACVuD,QAzBO,WACnBhE,GHDwB,SAACA,GAC3BA,EAAS,CAAEkB,KAAMhC,QGqBL,oBAMW,OACF,e,kCCjDVwF,EAAe,SAACzB,GAAD,OAAc,SAACjD,EAAUqC,GAAc,IACzDsC,EAAc7D,KAAKC,MAAMC,aAAaC,QAAQgC,IAA9C0B,UACR3E,EAAS,CAAEkB,KAAM5B,EAAiB6B,QAASwD,MCYhCC,EAAgB,SAAClF,GACiBA,EAArCmF,YAD+B,IAClBpE,EAAwBf,EAAxBe,UAAW0B,EAAazC,EAAbyC,SAE1B2C,EAAO5B,aAAY,SAACC,GAAD,OAAWA,EAAM4B,MAAMC,SAC1ChF,EAAWC,cAJqB,EAKQN,mBAAS,OALjB,mBAK/BsF,EAL+B,KAKdC,EALc,OAMVvF,mBAAS,IANC,mBAM/BwF,EAN+B,KAMvBC,EANuB,OAOJzF,oBAAS,GAPL,mBAO/B0F,EAP+B,KAOpBC,EAPoB,OAQJ3F,oBAAS,GARL,mBAQ/B4F,EAR+B,KAQpBC,EARoB,KAShCC,EAAWvC,aAAY,SAACC,GAAD,OAC3BA,EAAMuC,cAAcC,KAAI,SAAChF,GAAD,OAAOA,EAAEyB,cAE7BvB,EAAOqC,aAAY,SAACC,GAAD,OAAWA,EAAMC,KAAKvC,KAAKT,QAC9CuE,EAAYzB,aAAY,SAACC,GAAD,OAAWA,EAAMuC,iBAbT,EAcZ/F,oBAAS,GAdG,mBAc/BiG,EAd+B,KAcxBC,EAdwB,KAgBhCC,EAAS,kBAAMD,GAAUD,IAE/BG,qBAAU,WACJ5D,GACF2D,IAEF9F,EAASkC,EAAgBC,EAAU,UAClC,CAACA,IAkEJ,OACE,8BACE,eAAC6D,EAAA,EAAD,CAAO7B,OAAQyB,EAAOE,OAAQA,EAAQrF,UAAWA,EAAjD,UACG4E,EACC,cAAC/E,EAAA,EAAD,CAAOC,MAAM,SAAb,2CACE,KACHgF,EACC,cAACjF,EAAA,EAAD,CAAOC,MAAM,UAAb,qCACE,KAEJ,eAAC0F,EAAA,EAAD,CAAaH,OAAQA,EAAQrF,UAAU,cAAvC,UAGGgF,EAASE,KAAI,SAACvD,EAAS8D,GACtB,OACE,cAAClE,EAAA,EAAD,CAEEvB,UAAU,MACVuD,QAAS,kBAvBA,SAAC5B,GACtB8C,EAAmB9C,GACnBpC,EAASkC,EAAgBC,EAAUC,IAqBR+D,CAAe/D,IAC9B7B,MAAM,UAJR,SAMG6B,GALI8D,MASX,qBAAKzF,UAAU,iCAAf,SACE,+BACG0B,EAAS,GADZ,OACoB8C,UAIxB,eAACmB,EAAA,EAAD,CAAW3F,UAAU,OAArB,UACE,gCACE,yCACA,sBAAMA,UAAU,wBAAhB,SAAyCqE,OAE3C,eAACtE,EAAA,EAAD,CAAME,SA9CO,SAACC,GACpBA,EAAEC,iBAnDoB,WACtB,IAAMyF,EAAOvF,KAAKwF,UAAU3B,GACtB4B,EAAgBzF,KAAKC,MAAMsF,GAEN,IAAvBvF,KAAKC,MAAMoE,KACbG,GAAa,GACbhE,YAAW,WACTgE,GAAa,KACZ,KACHQ,KAGF,IAAMU,EAAYD,EAAcE,WAC9B,SAAC9F,GAAD,OAAOA,EAAEyB,UAAY6C,KAEjByB,EAAgBH,EAAcE,WAClC,SAAC9F,GAAD,OAAOA,EAAEyB,UAAYD,EAAS,MAE5BoE,EAAcC,GAAWG,WAAa7F,KAAKC,MAAMoE,IACnDoB,EAAcC,GAAWG,WACvBJ,EAAcC,GAAWG,WAAa7F,KAAKC,MAAMoE,EAASL,GAExD4B,GAAiB,EACnBH,EAAcG,GAAeC,WAC3BJ,EAAcG,GAAeC,WAAa7F,KAAKC,MAAMoE,GACvB,IAAvBrE,KAAKC,MAAMoE,IACpBoB,EAAclF,KAAK,CACjBe,QAASD,EAAS,GAClB/B,KAAM+B,EAAS,GACfwE,WAAY7F,KAAKC,MAAMoE,OAI3BK,GAAa,GACblE,YAAW,WACTkE,GAAa,KACZ,KACHM,KAEF,IAAMc,EAAiB9F,KAAKC,MAAMC,aAAaC,QAAQJ,IACvDG,aAAa6F,QACXhG,EACAC,KAAKwF,UAAL,2BACKM,GADL,IAEEjC,UAAW4B,MAGfvG,EAAS0E,EAAa7D,IAKtBiG,IA4CM,UACE,eAACvF,EAAA,EAAD,CAAWd,UAAU,4BAArB,UACE,cAACe,EAAA,EAAD,CAAOC,IAAI,eAAehB,UAAU,OAApC,oBAGA,cAACiB,EAAA,EAAD,CACER,KAAK,OACLd,KAAK,SACLuB,GAAG,eACHE,SA7GO,SAAClB,GACpByE,EAAUzE,EAAEmB,OAAOC,QA6GPH,YAAY,UAGhB,cAACI,EAAA,EAAD,CACEd,KAAK,SACLX,MAAM,UACNE,UAAU,OACVuD,QAAS8B,EAJX,sBAOU,gB,wBCjJTiB,EAAc,SAACrH,GAC1B,IAAMM,EAAWC,cACT4E,EAAqCnF,EAArCmF,YAAapE,EAAwBf,EAAxBe,UAAW0B,EAAazC,EAAbyC,SAFI,EAGUxC,mBAAS,OAHnB,mBAG7BsF,EAH6B,KAGZC,EAHY,OAIFvF,oBAAS,GAJP,mBAI7B0F,EAJ6B,KAIlBC,EAJkB,OAKF3F,oBAAS,GALP,mBAK7B4F,EAL6B,KAKlBC,EALkB,OAMV7F,oBAAS,GANC,mBAM7BiG,EAN6B,KAMtBC,EANsB,OAORlG,mBAAS,IAPD,mBAO7BwF,EAP6B,KAOrBC,EAPqB,KAQ9BK,EAAWvC,aAAY,SAACC,GAAD,OAC3BA,EAAMuC,cAAcC,KAAI,SAAChF,GAAD,OAAOA,EAAEyB,cAE7BuC,EAAYzB,aAAY,SAACC,GAAD,OAAWA,EAAMuC,iBACzCZ,EAAO5B,aAAY,SAACC,GAAD,OAAWA,EAAM4B,MAAMC,SAC1CnE,EAAOqC,aAAY,SAACC,GAAD,OAAWA,EAAMC,KAAKvC,KAAKT,QAE9C0F,EAAS,kBAAMD,GAAUD,IAM/BG,qBAAU,WACR/F,EAASkC,EAAgBC,EAAU,UAClC,IA6DH,OACE,gCACE,cAACH,EAAA,EAAD,CAAQzB,MAAM,UAAUyD,QAAS8B,EAAjC,SACGjB,IAEH,eAACmB,EAAA,EAAD,CAAO7B,OAAQyB,EAAOE,OAAQA,EAAQrF,UAAWA,EAAjD,UACE,eAACwF,EAAA,EAAD,CAAaH,OAAQA,EAArB,UACGT,EACC,cAAC/E,EAAA,EAAD,CAAOC,MAAM,SAAb,2CACE,KACHgF,EACC,cAACjF,EAAA,EAAD,CAAOC,MAAM,UAAb,qCACE,KACHkF,EAASE,KAAI,SAACvD,EAAS8D,GACtB,OACE,cAAClE,EAAA,EAAD,CAEEvB,UAAU,MACVuD,QAAS,kBAtFA,SAAC5B,GACtB8C,EAAmB9C,GACnBpC,EAASkC,EAAgBC,EAAUC,IAoFR+D,CAAe/D,IAC9B7B,MAAM,UAJR,SAMG6B,GALI8D,MASX,qBAAKzF,UAAU,iCAAf,SACE,+BACGwE,EADH,OACwB9C,EAAS,WAIrC,eAACiE,EAAA,EAAD,WACE,gCACE,yCACA,sBAAM3F,UAAU,wBAAhB,SACGuG,QAAQ,EAAIlC,GAAMmC,QAAQ,SAG/B,eAACzG,EAAA,EAAD,CAAME,SA3CO,SAACC,GACpBA,EAAEC,iBAvDoB,WACtB,IAAMyF,EAAOvF,KAAKwF,UAAU3B,GACtB4B,EAAgBzF,KAAKC,MAAMsF,GAEN,IAAvBvF,KAAKC,MAAMoE,KACbG,GAAa,GACbhE,YAAW,WACTgE,GAAa,KACZ,KACHQ,KAGF,IAAMU,EAAYD,EAAcE,WAC9B,SAAC9F,GAAD,OAAOA,EAAEyB,UAAY6C,KAEjByB,EAAgBH,EAAcE,WAClC,SAAC9F,GAAD,OAAOA,EAAEyB,UAAYD,EAAS,MAE5BoE,EAAcC,GAAWG,WAAa7F,KAAKC,MAAMoE,IACnDoB,EAAcC,GAAWG,WACvBJ,EAAcC,GAAWG,WAAa7F,KAAKC,MAAMoE,EAASL,GAExD4B,GAAiB,EACnBH,EAAcG,GAAeC,WAC3BJ,EAAcG,GAAeC,WAAa7F,KAAKC,MAAMoE,GACvB,IAAvBrE,KAAKC,MAAMoE,IACpBoB,EAAclF,KAAK,CACjBe,QAASD,EAAS,GAClB/B,KAAM+B,EAAS,GACfwE,WAAY7F,KAAKC,MAAMoE,OAI3BK,GAAa,GACblE,YAAW,WACTkE,GAAa,KACZ,KACHM,KAEF,IAAMc,EAAiB9F,KAAKC,MAAMC,aAAaC,QAAQJ,IACvDG,aAAa6F,QACXhG,EACAC,KAAKwF,UAAL,2BACKM,GADL,IAEEjC,UAAW4B,MAGfvG,EAAS0E,EAAa7D,IAStBiG,IAyCM,UACE,eAACvF,EAAA,EAAD,CAAWd,UAAU,4BAArB,UACE,cAACe,EAAA,EAAD,CAAOC,IAAI,eAAehB,UAAU,OAApC,oBAGA,cAACiB,EAAA,EAAD,CACER,KAAK,OACLd,KAAK,SACLuB,GAAG,eACHE,SAxDO,SAAClB,GACpByE,EAAUzE,EAAEmB,OAAOC,QAwDPH,YAAY,UAGhB,cAACI,EAAA,EAAD,CACEd,KAAK,SACLX,MAAM,UACNE,UAAU,OACVuD,QAAS8B,EAJX,sBAOU,iBC9IToB,EAAe,SAACxH,GAC3B,IAAMM,EAAWC,cACT4E,EAAqCnF,EAArCmF,YAAapE,EAAwBf,EAAxBe,UAAW0B,EAAazC,EAAbyC,SAFK,EAGSxC,mBAAS,OAHlB,mBAG9BsF,EAH8B,KAGbC,EAHa,OAIHvF,oBAAS,GAJN,mBAI9B0F,EAJ8B,KAInBC,EAJmB,OAKH3F,oBAAS,GALN,mBAK9B4F,EAL8B,aAMX5F,oBAAS,IANE,mBAM9BiG,EAN8B,KAMvBC,EANuB,OAOTlG,mBAAS,IAPA,mBAO9BwF,EAP8B,KAOtBC,EAPsB,KAQ/BK,EAAWvC,aAAY,SAACC,GAAD,OAC3BA,EAAMuC,cAAcC,KAAI,SAAChF,GAAD,OAAOA,EAAEyB,cAK7BuC,GAHOzB,aAAY,SAACC,GAAD,OACvBA,EAAMuC,cAAcC,KAAI,SAAChF,GAAD,OAAOA,EAAEyB,cAEjBc,aAAY,SAACC,GAAD,OAAWA,EAAMuC,kBACzCZ,EAAO5B,aAAY,SAACC,GAAD,OAAWA,EAAM4B,MAAMC,SAC1CnE,EAAOqC,aAAY,SAACC,GAAD,OAAWA,EAAMC,KAAKvC,KAAKT,QAE9C0F,EAAS,kBAAMD,GAAUD,IAyC/B,OACE,sBAAKnF,UAAU,OAAf,UACE,cAACuB,EAAA,EAAD,CAAQzB,MAAM,SAASyD,QAAS8B,EAAhC,SACGjB,IAEH,eAACmB,EAAA,EAAD,CAAO7B,OAAQyB,EAAOE,OAAQA,EAAQrF,UAAWA,EAAjD,UACE,eAACwF,EAAA,EAAD,CAAaH,OAAQA,EAArB,UACGT,EACC,cAAC/E,EAAA,EAAD,CAAOC,MAAM,SAAb,2CACE,KACHgF,EACC,cAACjF,EAAA,EAAD,CAAOC,MAAM,UAAb,qCACE,KACHkF,EAASE,KAAI,SAACvD,EAAS8D,GACtB,OACE,cAAClE,EAAA,EAAD,CAEEvB,UAAU,MACVuD,QAAS,kBA1DA,SAAC5B,GACtB8C,EAAmB9C,GACnBpC,EAASkC,EAAgBC,EAAUC,IAwDR+D,CAAe/D,IAC9B7B,MAAM,UAJR,SAMG6B,GALI8D,MASX,qBAAKzF,UAAU,iCAAf,SACE,+BACG0B,EAAS,GADZ,OACoB8C,UAIxB,eAACmB,EAAA,EAAD,WACE,gCACE,yCACA,sBAAM3F,UAAU,wBAAhB,SAAyCqE,OAE3C,eAACtE,EAAA,EAAD,CAAME,SAzCO,SAACC,GACpBA,EAAEC,iBA/BoB,WACtB,IAAMyF,EAAOvF,KAAKwF,UAAU3B,GACtB4B,EAAgBzF,KAAKC,MAAMsF,GAEN,IAAvBvF,KAAKC,MAAMoE,KACbG,GAAa,GACbhE,YAAW,WACTgE,GAAa,KACZ,KACHQ,KAGFxD,QAAQC,IAAI0C,GACZ3C,QAAQC,IAAIJ,GAEZ,IAAMyE,EAAiB9F,KAAKC,MAAMC,aAAaC,QAAQJ,IACvDG,aAAa6F,QACXhG,EACAC,KAAKwF,UAAL,2BACKM,GADL,IAEEjC,UAAW4B,MAGfvG,EAAS0E,EAAa7D,IAStBiG,IAuCM,UACE,eAACvF,EAAA,EAAD,CAAWd,UAAU,4BAArB,UACE,cAACe,EAAA,EAAD,CAAOC,IAAI,eAAehB,UAAU,OAApC,oBAGA,cAACiB,EAAA,EAAD,CACER,KAAK,OACLd,KAAK,SACLuB,GAAG,eACHE,SAtDO,SAAClB,GACpByE,EAAUzE,EAAEmB,OAAOC,QAsDPH,YAAY,UAGhB,cAACI,EAAA,EAAD,CACEd,KAAK,SACLX,MAAM,UACNE,UAAU,OACVuD,QAAS8B,EAJX,sBAOU,iBC7HTqB,EAAiB,WAC5B,IAAMxC,EAAYzB,aAAY,SAACC,GAAD,OAAWA,EAAMuC,iBACzC9C,EAAOwE,mBAAQ,8BAAUzC,KAAY,CAACA,IAEtC0C,EAAUD,mBACd,iBAAM,CACJ,CACEE,OAAQ,UACRC,SAAU,WAEZ,CACED,OAAQ,OACRC,SAAU,QAEZ,CACED,OAAQ,SACRC,SAAU,SAACC,GAAD,OAAOA,EAAEb,WAAWM,QAAQ,KAExC,CACEpD,MAAO,IACPyD,OAAQ,QACRG,KAAM,gBAAGC,EAAH,EAAGA,IAAH,OACJ,sBAAKjH,UAAU,gCAAf,UACE,cAAC,EAAD,CACEoE,YAAY,MACZ1C,SAAU,CAACuF,EAAIC,SAASvF,QAASsF,EAAIC,SAASvH,QAEhD,cAAC,EAAD,CACEyE,YAAY,OACZ1C,SAAU,CAACuF,EAAIC,SAASvF,QAASsF,EAAIC,SAASvH,gBAMxD,IAnCgC,EAgD9BwH,mBAAS,CAAEP,UAASzE,QAAQiF,YAAWC,iBATzCC,EAvCgC,EAuChCA,cACAC,EAxCgC,EAwChCA,kBACAC,EAzCgC,EAyChCA,aAGAC,GA5CgC,EA0ChCC,SA1CgC,EA2ChCC,aA3CgC,EA4ChCF,YACAG,EA7CgC,EA6ChCA,KA7CgC,EA8ChCC,gBA9CgC,EA+ChCC,YAEF,OACE,qBAAK9H,UAAU,oCAAf,SACE,kDAAWsH,KAAX,IAA4B7D,MAAO,CAAEsE,aAAc,QAAnD,UACE,gCACGP,EAAatC,KAAI,SAAC8C,GAAD,OAChB,8CAAQA,EAAYC,uBAApB,aACGD,EAAYE,QAAQhD,KAAI,SAACiD,GAAD,OACvB,+CACMA,EAAOC,eAAeD,EAAOE,yBADnC,IAEErI,UAAU,SACVyD,MAAO,CACLM,WAAY,UACZjE,MAAO,QACPwI,YAAa,QANjB,UASGH,EAAOI,OAAO,UACf,+BACGJ,EAAOK,SAAYL,EAAOM,aAAe,eAAO,eAAQ,oBAOrE,iDAAWlB,KAAX,aACGK,EAAK1C,KAAI,SAAC+B,GAET,OADAQ,EAAWR,GAET,8CAAQA,EAAIyB,eAAZ,aACGzB,EAAI0B,MAAMzD,KAAI,SAAC0D,GACd,OACE,8CACMA,EAAKC,gBADX,IAEE7I,UAAU,eACVyD,MAAO,CACLqF,mBAAoB,OACpBR,YAAa,OALjB,SAQGM,EAAKL,OAAO,8B,QClFpB,SAASQ,IACtB,IAAMtJ,EAAUC,cACVsJ,EAAUvG,aAAY,SAACC,GAAD,OAAWA,EAAMC,KAAKqG,WAC5CxG,EAAWC,aAAY,SAACC,GAAD,OAAWA,EAAMC,KAAKvC,KAAKT,QAClDsJ,EAAcxG,aAAY,SAACC,GAAD,OAAWA,EAAM4B,MAAM4E,QAEjDC,GADY1G,aAAY,SAACC,GAAD,OAAWA,EAAMuC,iBAC3BxC,aAAY,SAACC,GAAD,OAAWA,EAAMyG,gBANpB,EAQmBjK,mBAAS,IAR5B,mBAQtBkK,EARsB,KAQJC,EARI,KAUvBlH,EAAOM,aAAY,SAACC,GAAD,OACvBA,EAAM4B,MAAMnC,KAAK+C,KAAI,SAAChF,GACpB,MAAO,CAAEoJ,IAAKpJ,EAAE,GAAIoB,MAAM,GAAD,OAAKpB,EAAE,GAAP,YAAaA,EAAE,WAQtCX,EAAWC,cAWjB,OATA8F,qBAAU,WACR/F,GR3BoC,SAACA,EAAUqC,GACjDrC,EAAS,CAAEkB,KAAM9B,IACjBoD,IACGC,IAAI,qEACJC,MAAK,SAACC,GAAD,OACJ3C,EAAS,CACPkB,KAAM7B,EACN8B,QAASwB,EAAIC,KAAKoH,wBQsBlBP,IACFzJ,EAAS0E,EAAazB,IACtBjD,GL7B8B,SAACA,EAAUqC,GAC7C,IAAMxB,EAAOwB,IAAWe,KAAKvC,KAAKT,KAC5BuE,EAAYtC,IAAWqD,cAC7BpD,QAAQC,IAAIoC,GAEZnC,IACGC,IACC,0EAEDC,MAAK,SAACC,GACL,IAAMqC,EAAQrC,EAAIC,KAAKC,iBACjBoH,EAAQtF,EACXgB,KAAI,SAAChF,GAAD,OAAOA,EAAEgG,WAAa3B,EAAMrE,EAAEyB,YAClC8H,QAAO,SAACC,EAAGC,GACV,OAAOD,EAAIC,IACV,GAELpK,EAAS,CAAEkB,KAAM1B,EAAW2B,QAASkJ,KAAKC,MAAML,KAChD,IAAMM,EAAQzJ,KAAKC,MAAMC,aAAaC,QAAQJ,IAC9C0J,EAAM5D,WAAa0D,KAAKC,MAAML,GAC9BjJ,aAAa6F,QAAQhG,EAAMC,KAAKwF,UAAUiE,aKW3C,IAGD,8BACGd,EACC,gCACE,cAAC,EAAD,IACA,sBAAKhJ,UAAU,mDAAf,UACE,8CAAiBmJ,KACjB,cAAC,IAAD,CAAkBY,KAAM,QAG1B,sBAAK/J,UAAU,oBAAf,UACE,cAAC,IAAD,CACEmB,YAAY,sBACZ6I,SA5BY,SAAC9J,GACvBmJ,EAAoB,CAACnJ,EAAE+J,KAAKX,IAAKpJ,EAAE+J,KAAK3I,SA4B9BA,MAAM,MACNa,KAAMA,EACN+H,SAAU,SAAoBC,GAApB,OAA+BtI,QAAQC,IAAIqI,MACpD,IACH,cAAC,EAAD,CAAezI,SAAU0H,OAE3B,cAAC,EAAD,IAEA,sBAAM3F,MAAO,CAAE3D,MAAO,OAAtB,4BACA,sBAAME,UAAU,OAAhB,SAAwBiJ,OAG1BxJ,EAAQmB,KAAK,YCjEN,SAASwJ,KACtB,IAAM7K,EAAWC,cACXC,EAAUC,cAFiB,EAGTR,mBAAS,IAHA,mBAG1BS,EAH0B,KAGpBC,EAHoB,OAIHV,mBAAS,IAJN,mBAI1BmL,EAJ0B,KAIjBC,EAJiB,KA0BjC,OACE,8BACE,eAACvK,EAAA,EAAD,CACEC,UAAU,gDACVC,SAtBiB,SAACC,GACtBA,EAAEC,iBAGF,IVfqBoK,EUefnK,EAAO,CACXT,OACA0K,UACAnG,UAAW,CACT,CAAEvC,QAAS,MAAOhC,KAAM,uBAAwBuG,WAAY,OAKhE3G,GVxBqBgL,EUwBHnK,EVxBa,SAACb,EAAUqC,GAkB5CrC,EAAS,CAAEkB,KAAMjC,EAAiBkC,QAAS6J,OUOzChK,aAAa6F,QAAQhG,EAAKT,KAAMU,KAAKwF,UAAUzF,IAC/CX,EAAQmB,KAAK,MAKX,UAIE,0CACA,uBACA,eAACE,EAAA,EAAD,CAAWd,UAAU,uBAArB,UACE,cAACe,EAAA,EAAD,CAAOC,IAAI,eAAehB,UAAU,UAApC,kBAGA,cAACiB,EAAA,EAAD,CACER,KAAK,OACLd,KAAK,OACLuB,GAAG,cACHC,YAAY,OACZC,SAtCe,SAAClB,GAAD,OAAON,EAAQM,EAAEmB,OAAOC,aAyC3C,eAACR,EAAA,EAAD,CAAWd,UAAU,uBAArB,UACE,cAACe,EAAA,EAAD,CAAOC,IAAI,OAAOhB,UAAU,UAA5B,qBAGA,cAACiB,EAAA,EAAD,CACER,KAAK,OACLd,KAAK,OACLuB,GAAG,iBACHC,YAAY,MACZC,SAjDkB,SAAClB,GAAD,OAAOoK,EAAWpK,EAAEmB,OAAOC,aAoDjD,cAACC,EAAA,EAAD,CAAQzB,MAAM,UAAUE,UAAU,YAAlC,2BCrCOwK,OApBf,WACE,OACE,sBAAKxK,UAAU,MAAf,UACE,cAAC,IAAD,UACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOyK,KAAK,SAAZ,SACE,cAAC,EAAD,MAEF,cAAC,IAAD,CAAOA,KAAK,YAAZ,SACE,cAACL,GAAD,MAEF,cAAC,IAAD,CAAOK,KAAK,IAAZ,SACE,cAAC1B,EAAD,WAGI,QCVI2B,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2D,aCZAC,GAAe,CACnBC,cAAc,EACdhC,SAAS,EACT5I,KAAM,CAAET,KAAM,GAAI0K,QAAS,KCHvBU,GAAe,CACnB5I,KAAM,GACNoC,MAAO,GACP2E,KAAM,GACN+B,SAAS,GCRLF,GAAe,GCIRG,GAAQC,aAAe,CAClCC,QAAS,CACPzI,KHIuB,WAAmC,IAAlCD,EAAiC,uDAAzBqI,GAAcM,EAAW,uCAC3D,OAAQA,EAAO5K,MACb,KAAKjC,EACH,OAAO,2BACFkE,GADL,IAEEsG,SAAS,EACTgC,cAAc,EACd5K,KAAM,CAAET,KAAM0L,EAAO3K,QAAQf,KAAM0K,QAASgB,EAAO3K,QAAQ2J,WAE/D,KAAK5L,EACH,OAAO,2BACFiE,GADL,IAEEsG,QAAS,GACTgC,aAAc,GACd5K,KAAM,CAAET,KAAM,GAAI0K,QAAS,MAE/B,KAAK3L,EACH,OAAO,2BACFgE,GADL,IAEEsG,SAAS,EACTgC,cAAc,EACd5K,KAAM,CAAET,KAAM0L,EAAO3K,QAAQf,KAAM0K,QAASgB,EAAO3K,QAAQ2J,WAG/D,QACE,OAAO3H,IG5BT4B,MFI2B,WAAmC,IAAlC5B,EAAiC,uDAAzBqI,GAAcM,EAAW,uCAC/D,OAAQA,EAAO5K,MACb,KAAK9B,EACH,OAAO,2BACF+D,GADL,IAEEuI,SAAS,EACT/B,KAAM,IAAIoC,KAAKA,KAAKC,OAAOC,gBAE/B,KAAK5M,EACH,OAAO,2BACF8D,GADL,IAEEP,KAAMkJ,EAAO3K,QACbuK,SAAS,IAGb,KAAKnM,EACH,OAAO,2BACF4D,GADL,IAEE6B,MAAO8G,EAAO3K,QACdwI,KAAM,IAAIoC,KAAKA,KAAKC,OAAOC,gBAE/B,QACE,OAAO9I,IEzBTuC,cDN4B,WAAmC,IAAlCvC,EAAiC,uDAAzBqI,GAAcM,EAAW,uCAChE,OAAQA,EAAO5K,MACb,KAAK5B,EACH,OAAOwM,EAAO3K,QAChB,KAAKjC,EACH,MAAO,GACT,QACE,OAAOiE,ICATyG,YCP8B,WAAmC,IAAlCzG,EAAiC,uDAF/C,IAEoC2I,EAAW,uCAClE,OAAQA,EAAO5K,MACb,KAAK1B,EACH,OAAOsM,EAAO3K,QAEhB,QACE,OAAOgC,OCAb+I,IAASlD,OACP,cAAC,IAAMmD,WAAP,UACE,cAAC,IAAD,CAAUR,MAAOA,GAAjB,SACE,cAAC,GAAD,QAGJS,SAASC,eAAe,SNmHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAM9J,MAAK,SAAC+J,GAClCA,EAAaC,iB","file":"static/js/main.ff4c1b83.chunk.js","sourcesContent":["export const USER_REGISTERED = \"USER_REGISTERED\";\r\nexport const USER_LOGOUT = \"USER_LOADING\";\r\nexport const AUTH_ERROR = \"AUTH_ERROR\";\r\nexport const LOGIN_SUCCESS = \"LOGIN_SUCCESS\";\r\nexport const CURRENCY_LOADING = \"CURRENCY_LOADING\";\r\nexport const CURRENCY_LOADED = \"CURRENCY_LOADED\";\r\nexport const PORTFOLIO_START = \"PORTFOLIO_START\";\r\nexport const CURRENCY_RATE = \"CURRENCY_RATE\";\r\nexport const GET_TOTAL = \"GET_TOTAL\";\r\n","import React, { useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { useHistory } from \"react-router\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Button, Form, FormGroup, Label, Input } from \"reactstrap\";\r\nimport { Alert } from \"reactstrap\";\r\nimport { login } from \"../store/Actions/AuthAcrtions\";\r\n\r\nconst Login = (props) => {\r\n  const [logins, setLogins] = useState(false);\r\n  const [attempt, setAttempt] = useState(false);\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n\r\n  const [name, setName] = useState(\"\");\r\n  const handleChangeName = (e) => setName(e.target.value);\r\n  const handleOnSubmit = (e) => {\r\n    e.preventDefault();\r\n    const user = JSON.parse(localStorage.getItem(name));\r\n    if (user) {\r\n      dispatch(login(user));\r\n      history.push(\"/\");\r\n    } else {\r\n      setLogins(false);\r\n      setAttempt(true);\r\n      setTimeout(() => {\r\n        setAttempt(false);\r\n      }, 3000);\r\n      // history.push('/register');\r\n    }\r\n  };\r\n  return (\r\n    <>\r\n      {!logins && attempt ? (\r\n        <Alert color=\"warning\">Please register new account</Alert>\r\n      ) : null}\r\n\r\n      <Form\r\n        className=\"w-50 mx-auto border border-secondary mt-5 p-5\"\r\n        onSubmit={handleOnSubmit}\r\n      >\r\n        <h1>Login</h1>\r\n        <hr />\r\n        <FormGroup className=\"mb-2 mr-sm-2 mb-sm-0\">\r\n          <Label for=\"exampleEmail\" className=\"mr-sm-2\">\r\n            Account name\r\n          </Label>\r\n\r\n          <Input\r\n            type=\"name\"\r\n            name=\"name\"\r\n            id=\"exampleName\"\r\n            placeholder=\"john\"\r\n            onChange={handleChangeName}\r\n          />\r\n        </FormGroup>\r\n        <Button color=\"danger\" className=\"px-5 mt-5\">\r\n          Login\r\n        </Button>{\" \"}\r\n        <br />\r\n        <Link className=\"float-start  py-3\" to=\"/register\">\r\n          Register\r\n        </Link>\r\n      </Form>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","import axios from \"axios\";\r\nimport { LOGIN_SUCCESS, USER_LOGOUT, USER_REGISTERED } from \"./actions\";\r\n\r\nexport const register = (users) => (dispatch, getState) => {\r\n  // User loading\r\n  //   dispatch({ type: USER_LOADING });\r\n  //   axios\r\n  //     .get('/api/auth/user', tokenConfig(getState))\r\n  //     .then((res) =>\r\n  //       dispatch({\r\n  //         type: USER_LOADED,\r\n  //         payload: res.data,\r\n  //       })\r\n  //     )\r\n  //     .catch((err) => {\r\n  //       dispatch(returnErrors(err.response.data, err.response.status));\r\n  //       dispatch({\r\n  //         type: AUTH_ERROR,\r\n  //       });\r\n  //     });\r\n\r\n  dispatch({ type: USER_REGISTERED, payload: users });\r\n};\r\nexport const logout = () => (dispatch) => {\r\n  dispatch({ type: USER_LOGOUT });\r\n};\r\n\r\nexport const login = (user) => (dispatch) => {\r\n  dispatch({ type: LOGIN_SUCCESS, payload: user });\r\n};\r\n","import axios from \"axios\";\r\nimport {\r\n  CURRENCY_LOADED,\r\n  CURRENCY_LOADING,\r\n  CURRENCY_RATE,\r\n  LOGIN_SUCCESS,\r\n  USER_LOGOUT,\r\n  USER_REGISTERED,\r\n} from \"./actions\";\r\n\r\nexport const getCurrencies = (users) => (dispatch, getState) => {\r\n  dispatch({ type: CURRENCY_LOADING });\r\n  axios\r\n    .get(\"https://v6.exchangerate-api.com/v6/61ae5c15d41f8f7ab2cdfdef/codes\")\r\n    .then((res) =>\r\n      dispatch({\r\n        type: CURRENCY_LOADED,\r\n        payload: res.data.supported_codes,\r\n      })\r\n    );\r\n};\r\n\r\nexport const getCurrencyRate = (selected, acronym) => (dispatch, getState) => {\r\n  console.log(selected);\r\n  axios\r\n    .get(\r\n      `https://v6.exchangerate-api.com/v6/61ae5c15d41f8f7ab2cdfdef/latest/${selected[0]}`\r\n    )\r\n    .then((res) =>\r\n      dispatch({\r\n        type: CURRENCY_RATE,\r\n        payload: res.data.conversion_rates[acronym],\r\n      })\r\n    );\r\n};\r\n","export default __webpack_public_path__ + \"static/media/logo.2f2718d3.svg\";","import React, { useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport logo from '../images/logo.svg';\r\nimport { CgProfile } from 'react-icons/cg';\r\nimport Image from 'react-bootstrap/Image';\r\n\r\nimport {\r\n  Collapse,\r\n  Navbar,\r\n  NavbarToggler,\r\n  NavbarBrand,\r\n  Nav,\r\n  NavItem,\r\n  NavLink,\r\n} from 'reactstrap';\r\nimport { logout } from '../store/Actions/AuthAcrtions';\r\n\r\nexport const AppNavbar = () => {\r\n  const [collapsed, setCollapsed] = useState(true);\r\n  const dispatch = useDispatch();\r\n  const userName = useSelector((state) => state.auth.user.name);\r\n\r\n  const toggleNavbar = () => setCollapsed(!collapsed);\r\n  const handleLogout = () => {\r\n    dispatch(logout());\r\n  };\r\n  return (\r\n    <div>\r\n      <Navbar color=\"dark\" dark expand=\"md\" className=\"mb-5\">\r\n        <NavbarBrand href=\"/\" className=\"mr-auto\">\r\n          <img src={logo} alt=\"fdf\" width={80} height={50} />\r\n        </NavbarBrand>\r\n        <NavbarToggler onClick={toggleNavbar} className=\"mr-2\" />\r\n        <Collapse\r\n          className=\"justify-content-end me-5\"\r\n          style={{ color: 'red' }}\r\n          isOpen={!collapsed}\r\n          navbar\r\n        >\r\n          <Nav navbar>\r\n            <NavItem className=\"d-flex align-items-center justify-content-center\">\r\n              <CgProfile color=\"white\" />\r\n              <NavLink href=\"#\">{`welcome ${userName}`}</NavLink>{' '}\r\n            </NavItem>{' '}\r\n            <NavItem>\r\n              <NavLink\r\n                style={{ background: 'red', cursor: 'pointer' }}\r\n                className=\"d-flex align-items-center justify-content-center ms-4\"\r\n                onClick={handleLogout}\r\n              >\r\n                Logout\r\n              </NavLink>{' '}\r\n            </NavItem>{' '}\r\n          </Nav>\r\n        </Collapse>\r\n      </Navbar>\r\n    </div>\r\n  );\r\n};\r\n","import { GET_TOTAL, PORTFOLIO_START, USER_LOGOUT } from \"./actions\";\r\nimport axios from \"axios\";\r\n\r\nexport const getPortfolio = (userName) => (dispatch, getState) => {\r\n  const { portfolio } = JSON.parse(localStorage.getItem(userName));\r\n  dispatch({ type: PORTFOLIO_START, payload: portfolio });\r\n};\r\n\r\nexport const logout = () => (dispatch) => {\r\n  dispatch({ type: USER_LOGOUT });\r\n};\r\n\r\nexport const getTotalAssets = () => (dispatch, getState) => {\r\n  const user = getState().auth.user.name;\r\n  const portfolio = getState().portfolioData;\r\n  console.log(portfolio);\r\n\r\n  axios\r\n    .get(\r\n      \"https://v6.exchangerate-api.com/v6/61ae5c15d41f8f7ab2cdfdef/latest/USD\"\r\n    )\r\n    .then((res) => {\r\n      const rates = res.data.conversion_rates;\r\n      const total = portfolio\r\n        .map((e) => e.totalAsset / rates[e.acronym])\r\n        .reduce((a, b) => {\r\n          return a + b;\r\n        }, 0);\r\n\r\n      dispatch({ type: GET_TOTAL, payload: Math.round(total) });\r\n      const local = JSON.parse(localStorage.getItem(user));\r\n      local.totalAsset = Math.round(total);\r\n      localStorage.setItem(user, JSON.stringify(local));\r\n    });\r\n};\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Alert } from \"reactstrap\";\r\nimport {\r\n  Button,\r\n  Modal,\r\n  ModalHeader,\r\n  ModalBody,\r\n  ModalFooter,\r\n  FormGroup,\r\n  Label,\r\n  Input,\r\n  Form,\r\n} from \"reactstrap\";\r\nimport { getCurrencyRate } from \"../store/Actions/currencyActions\";\r\nimport { getPortfolio } from \"../store/Actions/portfolioActions\";\r\n\r\nexport const PurchaseModal = (props) => {\r\n  const { buttonLabel, className, selected } = props;\r\n\r\n  const rate = useSelector((state) => state.codes.rates);\r\n  const dispatch = useDispatch();\r\n  const [clickedCurrency, setClickedCurrency] = useState(\"USD\");\r\n  const [amount, setAmount] = useState(\"\");\r\n  const [alertZero, setZeroAlert] = useState(false);\r\n  const [alertHigh, setAlertHigh] = useState(false);\r\n  const acronyms = useSelector((state) =>\r\n    state.portfolioData.map((e) => e.acronym)\r\n  );\r\n  const user = useSelector((state) => state.auth.user.name);\r\n  const portfolio = useSelector((state) => state.portfolioData);\r\n  const [modal, setModal] = useState(false);\r\n\r\n  const toggle = () => setModal(!modal);\r\n\r\n  useEffect(() => {\r\n    if (selected) {\r\n      toggle();\r\n    }\r\n    dispatch(getCurrencyRate(selected, \"USD\"));\r\n  }, [selected]);\r\n\r\n  const handleChange = (e) => {\r\n    setAmount(e.target.value);\r\n  };\r\n\r\n  const updatePortfolio = () => {\r\n    const copy = JSON.stringify(portfolio);\r\n    const copyPortfolio = JSON.parse(copy);\r\n\r\n    if (JSON.parse(amount) === 0) {\r\n      setZeroAlert(true);\r\n      setTimeout(() => {\r\n        setZeroAlert(false);\r\n      }, 5000);\r\n      toggle();\r\n    }\r\n\r\n    const indexMain = copyPortfolio.findIndex(\r\n      (e) => e.acronym === clickedCurrency\r\n    );\r\n    const indexSelected = copyPortfolio.findIndex(\r\n      (e) => e.acronym === selected[0]\r\n    );\r\n    if (copyPortfolio[indexMain].totalAsset > JSON.parse(amount)) {\r\n      copyPortfolio[indexMain].totalAsset =\r\n        copyPortfolio[indexMain].totalAsset - JSON.parse(amount * rate);\r\n\r\n      if (indexSelected >= 0) {\r\n        copyPortfolio[indexSelected].totalAsset =\r\n          copyPortfolio[indexSelected].totalAsset + JSON.parse(amount);\r\n      } else if (JSON.parse(amount) !== 0) {\r\n        copyPortfolio.push({\r\n          acronym: selected[0],\r\n          name: selected[1],\r\n          totalAsset: JSON.parse(amount),\r\n        });\r\n      }\r\n    } else {\r\n      setAlertHigh(true);\r\n      setTimeout(() => {\r\n        setAlertHigh(false);\r\n      }, 5000);\r\n      toggle();\r\n    }\r\n    const localPortfolio = JSON.parse(localStorage.getItem(user));\r\n    localStorage.setItem(\r\n      user,\r\n      JSON.stringify({\r\n        ...localPortfolio,\r\n        portfolio: copyPortfolio,\r\n      })\r\n    );\r\n    dispatch(getPortfolio(user));\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    updatePortfolio();\r\n  };\r\n\r\n  const handleCurrency = (acronym) => {\r\n    setClickedCurrency(acronym);\r\n    dispatch(getCurrencyRate(selected, acronym));\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Modal isOpen={modal} toggle={toggle} className={className}>\r\n        {alertZero ? (\r\n          <Alert color=\"danger\">You entered an invalid amount</Alert>\r\n        ) : null}\r\n        {alertHigh ? (\r\n          <Alert color=\"warning\">You entered high amount</Alert>\r\n        ) : null}\r\n\r\n        <ModalHeader toggle={toggle} className=\"text-center\">\r\n          {/* <Button color=\"primary\">USD</Button>{\" \"} */}\r\n\r\n          {acronyms.map((acronym, index) => {\r\n            return (\r\n              <Button\r\n                key={index}\r\n                className=\"m-1\"\r\n                onClick={() => handleCurrency(acronym)}\r\n                color=\"success\"\r\n              >\r\n                {acronym}\r\n              </Button>\r\n            );\r\n          })}\r\n          <div className=\"d-flex justify-content-between\">\r\n            <h5>\r\n              {selected[1]} to {clickedCurrency}\r\n            </h5>\r\n          </div>\r\n        </ModalHeader>\r\n        <ModalBody className=\"mx-5\">\r\n          <div>\r\n            <span>Rate:</span>\r\n            <span className=\"text-danger mx-3 fs-4\">{rate}</span>\r\n          </div>\r\n          <Form onSubmit={handleSubmit}>\r\n            <FormGroup className=\"d-flex align-items-center\">\r\n              <Label for=\"exampleEmail\" className=\"me-2\">\r\n                Amount\r\n              </Label>\r\n              <Input\r\n                type=\"text\"\r\n                name=\"amount\"\r\n                id=\"exampleEmail\"\r\n                onChange={handleChange}\r\n                placeholder=\"20\"\r\n              />\r\n            </FormGroup>\r\n            <Button\r\n              type=\"submit\"\r\n              color=\"primary\"\r\n              className=\"mt-3\"\r\n              onClick={toggle}\r\n            >\r\n              Exchange\r\n            </Button>{\" \"}\r\n          </Form>\r\n        </ModalBody>\r\n      </Modal>\r\n    </div>\r\n  );\r\n};\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  Button,\r\n  Modal,\r\n  ModalHeader,\r\n  ModalBody,\r\n  ModalFooter,\r\n  Form,\r\n  FormGroup,\r\n  Label,\r\n  Input,\r\n  Alert,\r\n} from \"reactstrap\";\r\nimport { getCurrencyRate } from \"../store/Actions/currencyActions\";\r\nimport { getPortfolio } from \"../store/Actions/portfolioActions\";\r\n\r\nexport const BuyingModal = (props) => {\r\n  const dispatch = useDispatch();\r\n  const { buttonLabel, className, selected } = props;\r\n  const [clickedCurrency, setClickedCurrency] = useState(\"USD\");\r\n  const [alertZero, setZeroAlert] = useState(false);\r\n  const [alertHigh, setAlertHigh] = useState(false);\r\n  const [modal, setModal] = useState(false);\r\n  const [amount, setAmount] = useState(\"\");\r\n  const acronyms = useSelector((state) =>\r\n    state.portfolioData.map((e) => e.acronym)\r\n  );\r\n  const portfolio = useSelector((state) => state.portfolioData);\r\n  const rate = useSelector((state) => state.codes.rates);\r\n  const user = useSelector((state) => state.auth.user.name);\r\n\r\n  const toggle = () => setModal(!modal);\r\n  const handleCurrency = (acronym) => {\r\n    setClickedCurrency(acronym);\r\n    dispatch(getCurrencyRate(selected, acronym));\r\n  };\r\n\r\n  useEffect(() => {\r\n    dispatch(getCurrencyRate(selected, \"USD\"));\r\n  }, []);\r\n\r\n  const updatePortfolio = () => {\r\n    const copy = JSON.stringify(portfolio);\r\n    const copyPortfolio = JSON.parse(copy);\r\n\r\n    if (JSON.parse(amount) === 0) {\r\n      setZeroAlert(true);\r\n      setTimeout(() => {\r\n        setZeroAlert(false);\r\n      }, 5000);\r\n      toggle();\r\n    }\r\n\r\n    const indexMain = copyPortfolio.findIndex(\r\n      (e) => e.acronym === clickedCurrency\r\n    );\r\n    const indexSelected = copyPortfolio.findIndex(\r\n      (e) => e.acronym === selected[0]\r\n    );\r\n    if (copyPortfolio[indexMain].totalAsset > JSON.parse(amount)) {\r\n      copyPortfolio[indexMain].totalAsset =\r\n        copyPortfolio[indexMain].totalAsset - JSON.parse(amount * rate);\r\n\r\n      if (indexSelected >= 0) {\r\n        copyPortfolio[indexSelected].totalAsset =\r\n          copyPortfolio[indexSelected].totalAsset + JSON.parse(amount);\r\n      } else if (JSON.parse(amount) !== 0) {\r\n        copyPortfolio.push({\r\n          acronym: selected[0],\r\n          name: selected[1],\r\n          totalAsset: JSON.parse(amount),\r\n        });\r\n      }\r\n    } else {\r\n      setAlertHigh(true);\r\n      setTimeout(() => {\r\n        setAlertHigh(false);\r\n      }, 5000);\r\n      toggle();\r\n    }\r\n    const localPortfolio = JSON.parse(localStorage.getItem(user));\r\n    localStorage.setItem(\r\n      user,\r\n      JSON.stringify({\r\n        ...localPortfolio,\r\n        portfolio: copyPortfolio,\r\n      })\r\n    );\r\n    dispatch(getPortfolio(user));\r\n  };\r\n\r\n  const handleChange = (e) => {\r\n    setAmount(e.target.value);\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    updatePortfolio();\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Button color=\"success\" onClick={toggle}>\r\n        {buttonLabel}\r\n      </Button>\r\n      <Modal isOpen={modal} toggle={toggle} className={className}>\r\n        <ModalHeader toggle={toggle}>\r\n          {alertZero ? (\r\n            <Alert color=\"danger\">You entered an invalid amount</Alert>\r\n          ) : null}\r\n          {alertHigh ? (\r\n            <Alert color=\"warning\">You entered high amount</Alert>\r\n          ) : null}\r\n          {acronyms.map((acronym, index) => {\r\n            return (\r\n              <Button\r\n                key={index}\r\n                className=\"m-1\"\r\n                onClick={() => handleCurrency(acronym)}\r\n                color=\"success\"\r\n              >\r\n                {acronym}\r\n              </Button>\r\n            );\r\n          })}\r\n          <div className=\"d-flex justify-content-between\">\r\n            <h5>\r\n              {clickedCurrency} to {selected[0]}\r\n            </h5>\r\n          </div>\r\n        </ModalHeader>\r\n        <ModalBody>\r\n          <div>\r\n            <span>Rate:</span>\r\n            <span className=\"text-danger mx-3 fs-4\">\r\n              {Number((1 / rate).toFixed(4))}\r\n            </span>\r\n          </div>\r\n          <Form onSubmit={handleSubmit}>\r\n            <FormGroup className=\"d-flex align-items-center\">\r\n              <Label for=\"exampleEmail\" className=\"me-2\">\r\n                Amount\r\n              </Label>\r\n              <Input\r\n                type=\"text\"\r\n                name=\"amount\"\r\n                id=\"exampleEmail\"\r\n                onChange={handleChange}\r\n                placeholder=\"20\"\r\n              />\r\n            </FormGroup>\r\n            <Button\r\n              type=\"submit\"\r\n              color=\"primary\"\r\n              className=\"mt-3\"\r\n              onClick={toggle}\r\n            >\r\n              Exchange\r\n            </Button>{\" \"}\r\n          </Form>\r\n        </ModalBody>\r\n      </Modal>\r\n    </div>\r\n  );\r\n};\r\n","import React, { useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  Button,\r\n  Modal,\r\n  ModalHeader,\r\n  ModalBody,\r\n  ModalFooter,\r\n  Form,\r\n  FormGroup,\r\n  Label,\r\n  Input,\r\n  Alert,\r\n} from \"reactstrap\";\r\nimport { getCurrencyRate } from \"../store/Actions/currencyActions\";\r\nimport { getPortfolio } from \"../store/Actions/portfolioActions\";\r\n\r\nexport const SellingModal = (props) => {\r\n  const dispatch = useDispatch();\r\n  const { buttonLabel, className, selected } = props;\r\n  const [clickedCurrency, setClickedCurrency] = useState(\"USD\");\r\n  const [alertZero, setZeroAlert] = useState(false);\r\n  const [alertHigh, setAlertHigh] = useState(false);\r\n  const [modal, setModal] = useState(false);\r\n  const [amount, setAmount] = useState(\"\");\r\n  const acronyms = useSelector((state) =>\r\n    state.portfolioData.map((e) => e.acronym)\r\n  );\r\n  const name = useSelector((state) =>\r\n    state.portfolioData.map((e) => e.acronym)\r\n  );\r\n  const portfolio = useSelector((state) => state.portfolioData);\r\n  const rate = useSelector((state) => state.codes.rates);\r\n  const user = useSelector((state) => state.auth.user.name);\r\n\r\n  const toggle = () => setModal(!modal);\r\n  const handleCurrency = (acronym) => {\r\n    setClickedCurrency(acronym);\r\n    dispatch(getCurrencyRate(selected, acronym));\r\n  };\r\n\r\n  const updatePortfolio = () => {\r\n    const copy = JSON.stringify(portfolio);\r\n    const copyPortfolio = JSON.parse(copy);\r\n\r\n    if (JSON.parse(amount) === 0) {\r\n      setZeroAlert(true);\r\n      setTimeout(() => {\r\n        setZeroAlert(false);\r\n      }, 5000);\r\n      toggle();\r\n    }\r\n    //////////////////////////////////////////\r\n    console.log(clickedCurrency);\r\n    console.log(selected);\r\n\r\n    const localPortfolio = JSON.parse(localStorage.getItem(user));\r\n    localStorage.setItem(\r\n      user,\r\n      JSON.stringify({\r\n        ...localPortfolio,\r\n        portfolio: copyPortfolio,\r\n      })\r\n    );\r\n    dispatch(getPortfolio(user));\r\n  };\r\n  ////////////////////////////////\r\n  const handleChange = (e) => {\r\n    setAmount(e.target.value);\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    updatePortfolio();\r\n  };\r\n\r\n  return (\r\n    <div className=\"mx-2\">\r\n      <Button color=\"danger\" onClick={toggle}>\r\n        {buttonLabel}\r\n      </Button>\r\n      <Modal isOpen={modal} toggle={toggle} className={className}>\r\n        <ModalHeader toggle={toggle}>\r\n          {alertZero ? (\r\n            <Alert color=\"danger\">You entered an invalid amount</Alert>\r\n          ) : null}\r\n          {alertHigh ? (\r\n            <Alert color=\"warning\">You entered high amount</Alert>\r\n          ) : null}\r\n          {acronyms.map((acronym, index) => {\r\n            return (\r\n              <Button\r\n                key={index}\r\n                className=\"m-1\"\r\n                onClick={() => handleCurrency(acronym)}\r\n                color=\"success\"\r\n              >\r\n                {acronym}\r\n              </Button>\r\n            );\r\n          })}\r\n          <div className=\"d-flex justify-content-between\">\r\n            <h5>\r\n              {selected[0]} to {clickedCurrency}\r\n            </h5>\r\n          </div>\r\n        </ModalHeader>\r\n        <ModalBody>\r\n          <div>\r\n            <span>Rate:</span>\r\n            <span className=\"text-danger mx-3 fs-4\">{rate}</span>\r\n          </div>\r\n          <Form onSubmit={handleSubmit}>\r\n            <FormGroup className=\"d-flex align-items-center\">\r\n              <Label for=\"exampleEmail\" className=\"me-2\">\r\n                Amount\r\n              </Label>\r\n              <Input\r\n                type=\"text\"\r\n                name=\"amount\"\r\n                id=\"exampleEmail\"\r\n                onChange={handleChange}\r\n                placeholder=\"20\"\r\n              />\r\n            </FormGroup>\r\n            <Button\r\n              type=\"submit\"\r\n              color=\"primary\"\r\n              className=\"mt-3\"\r\n              onClick={toggle}\r\n            >\r\n              Exchange\r\n            </Button>{\" \"}\r\n          </Form>\r\n        </ModalBody>\r\n      </Modal>\r\n    </div>\r\n  );\r\n};\r\n","import React, { useMemo, useState } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { useTable, useSortBy, usePagination } from \"react-table\";\r\nimport { BuyingModal } from \"./BuyingModal\";\r\nimport { PurchaseModal } from \"./PurchaseModal\";\r\nimport { SellingModal } from \"./SellingModal\";\r\n\r\nexport const PortfolioTable = () => {\r\n  const portfolio = useSelector((state) => state.portfolioData);\r\n  const data = useMemo(() => [...portfolio], [portfolio]);\r\n\r\n  const columns = useMemo(\r\n    () => [\r\n      {\r\n        Header: \"Acronym\",\r\n        accessor: \"acronym\", // accessor is the \"key\" in the data\r\n      },\r\n      {\r\n        Header: \"Name\",\r\n        accessor: \"name\",\r\n      },\r\n      {\r\n        Header: \"Amount\",\r\n        accessor: (d) => d.totalAsset.toFixed(3),\r\n      },\r\n      {\r\n        width: 300,\r\n        Header: \"Trade\",\r\n        Cell: ({ row }) => (\r\n          <div className=\"d-flex justify-content-center\">\r\n            <BuyingModal\r\n              buttonLabel=\"Buy\"\r\n              selected={[row.original.acronym, row.original.name]}\r\n            />\r\n            <SellingModal\r\n              buttonLabel=\"Sell\"\r\n              selected={[row.original.acronym, row.original.name]}\r\n            />\r\n          </div>\r\n        ),\r\n      },\r\n    ],\r\n    []\r\n  );\r\n\r\n  const {\r\n    getTableProps,\r\n    getTableBodyProps,\r\n    headerGroups,\r\n    nextPage,\r\n    previousPage,\r\n    prepareRow,\r\n    page,\r\n    canPreviousPage,\r\n    canNextPage,\r\n  } = useTable({ columns, data }, useSortBy, usePagination);\r\n  return (\r\n    <div className=\"d-flex flex-column mb-5 mt-5 mx-5\">\r\n      <table {...getTableProps()} style={{ borderRadius: \"15px\" }}>\r\n        <thead>\r\n          {headerGroups.map((headerGroup) => (\r\n            <tr {...headerGroup.getHeaderGroupProps()}>\r\n              {headerGroup.headers.map((column) => (\r\n                <th\r\n                  {...column.getHeaderProps(column.getSortByToggleProps())}\r\n                  className=\"border\"\r\n                  style={{\r\n                    background: \"#f3f4f6\",\r\n                    color: \"black\",\r\n                    paddingLeft: \"12px\",\r\n                  }}\r\n                >\r\n                  {column.render(\"Header\")}\r\n                  <span>\r\n                    {column.isSorted ? (column.isSortedDesc ? \"🔽\" : \"🔼\") : \"\"}\r\n                  </span>\r\n                </th>\r\n              ))}\r\n            </tr>\r\n          ))}\r\n        </thead>\r\n        <tbody {...getTableBodyProps()}>\r\n          {page.map((row) => {\r\n            prepareRow(row);\r\n            return (\r\n              <tr {...row.getRowProps()}>\r\n                {row.cells.map((cell) => {\r\n                  return (\r\n                    <td\r\n                      {...cell.getCellProps()}\r\n                      className=\"border py-2 \"\r\n                      style={{\r\n                        textDecorationLine: \"none\",\r\n                        paddingLeft: \"7px\",\r\n                      }}\r\n                    >\r\n                      {cell.render(\"Cell\")}\r\n                    </td>\r\n                  );\r\n                })}\r\n              </tr>\r\n            );\r\n          })}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n};\r\n","import React, { useEffect, useMemo, useRef, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useHistory } from \"react-router\";\r\nimport { getCurrencies } from \"../store/Actions/currencyActions\";\r\nimport { AppNavbar } from \"../../src/components/AppNavbar\";\r\nimport { PurchaseModal } from \"../components/PurchaseModal\";\r\nimport ReactSearchBox from \"react-search-box\";\r\nimport { PortfolioTable } from \"../components/PortfolioTable\";\r\nimport { MdMonetizationOn } from \"react-icons/md\";\r\nimport {\r\n  getPortfolio,\r\n  getTotalAssets,\r\n} from \"../store/Actions/portfolioActions\";\r\n\r\nexport default function Home() {\r\n  const history = useHistory();\r\n  const isLogin = useSelector((state) => state.auth.isLogin);\r\n  const userName = useSelector((state) => state.auth.user.name);\r\n  const lastUpdated = useSelector((state) => state.codes.date);\r\n  const portfolio = useSelector((state) => state.portfolioData);\r\n  const totalAssets = useSelector((state) => state.totalAssets);\r\n\r\n  const [selectedCurrency, setSelectedCurrency] = useState(\"\");\r\n\r\n  const data = useSelector((state) =>\r\n    state.codes.data.map((e) => {\r\n      return { key: e[0], value: `${e[0]}-${e[1]}` };\r\n    })\r\n  );\r\n\r\n  const handleSelection = (e) => {\r\n    setSelectedCurrency([e.item.key, e.item.value]);\r\n  };\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(getCurrencies());\r\n\r\n    if (isLogin) {\r\n      dispatch(getPortfolio(userName));\r\n      dispatch(getTotalAssets(userName));\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      {isLogin ? (\r\n        <div>\r\n          <AppNavbar />\r\n          <div className=\"d-flex justify-content-center align-items-center\">\r\n            <h2>TotalAssets:{totalAssets}</h2>\r\n            <MdMonetizationOn size={30} />\r\n          </div>\r\n\r\n          <div className=\"w-50 mx-auto mt-5\">\r\n            <ReactSearchBox\r\n              placeholder=\"Search for currency\"\r\n              onSelect={handleSelection}\r\n              value=\"Doe\"\r\n              data={data}\r\n              callback={(/** @type {any} */ record) => console.log(record)}\r\n            />{\" \"}\r\n            <PurchaseModal selected={selectedCurrency} />\r\n          </div>\r\n          <PortfolioTable />\r\n\r\n          <span style={{ color: \"red\" }}>Last Updated: </span>\r\n          <span className=\"pb-5\">{lastUpdated}</span>\r\n        </div>\r\n      ) : (\r\n        history.push(\"/login\")\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { Button, Form, FormGroup, Input, Label } from \"reactstrap\";\r\nimport { register } from \"../store/Actions/AuthAcrtions\";\r\n\r\nexport default function Register() {\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n  const [name, setName] = useState(\"\");\r\n  const [surname, setSurname] = useState(\"\");\r\n  const handleChangeName = (e) => setName(e.target.value);\r\n  const handleChangeSurname = (e) => setSurname(e.target.value);\r\n\r\n  const handleOnSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    // Create user object\r\n    const user = {\r\n      name,\r\n      surname,\r\n      portfolio: [\r\n        { acronym: \"USD\", name: \"United States Dollar\", totalAsset: 1000 },\r\n      ],\r\n    };\r\n\r\n    // Attempt to login\r\n    dispatch(register(user));\r\n    localStorage.setItem(user.name, JSON.stringify(user));\r\n    history.push(\"/\");\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Form\r\n        className=\"w-50 mx-auto border border-secondary mt-5 p-4\"\r\n        onSubmit={handleOnSubmit}\r\n      >\r\n        <h1>Register</h1>\r\n        <hr />\r\n        <FormGroup className=\"mb-2 mr-sm-2 mb-sm-0\">\r\n          <Label for=\"exampleEmail\" className=\"mr-sm-2\">\r\n            Name\r\n          </Label>\r\n          <Input\r\n            type=\"name\"\r\n            name=\"name\"\r\n            id=\"exampleName\"\r\n            placeholder=\"john\"\r\n            onChange={handleChangeName}\r\n          />\r\n        </FormGroup>\r\n        <FormGroup className=\"mb-2 mr-sm-2 mb-sm-0\">\r\n          <Label for=\"name\" className=\"mr-sm-2\">\r\n            Surname\r\n          </Label>\r\n          <Input\r\n            type=\"name\"\r\n            name=\"name\"\r\n            id=\"exampleSurname\"\r\n            placeholder=\"doe\"\r\n            onChange={handleChangeSurname}\r\n          />\r\n        </FormGroup>\r\n        <Button color=\"success\" className=\"px-5 mt-5\">\r\n          Register\r\n        </Button>\r\n      </Form>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\nimport \"./App.css\";\nimport Login from \"./pages/Login\";\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\nimport Home from \"./pages/Home\";\nimport Register from \"./pages/Register\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Router>\n        <Switch>\n          <Route path=\"/login\">\n            <Login />\n          </Route>\n          <Route path=\"/register\">\n            <Register />\n          </Route>\n          <Route path=\"/\">\n            <Home />\n          </Route>\n        </Switch>\n      </Router>{\" \"}\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then((registration) => {\n      registration.unregister();\n    });\n  }\n}\n","import {\r\n  LOGIN_SUCCESS,\r\n  USER_LOGOUT,\r\n  USER_REGISTERED,\r\n} from \"../Actions/actions\";\r\n\r\nconst initialState = {\r\n  isRegistered: false,\r\n  isLogin: false,\r\n  user: { name: \"\", surname: \"\" },\r\n};\r\n\r\nexport const authReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case USER_REGISTERED:\r\n      return {\r\n        ...state,\r\n        isLogin: true,\r\n        isRegistered: true,\r\n        user: { name: action.payload.name, surname: action.payload.surname },\r\n      };\r\n    case USER_LOGOUT:\r\n      return {\r\n        ...state,\r\n        isLogin: \"\",\r\n        isRegistered: \"\",\r\n        user: { name: \"\", surname: \"\" },\r\n      };\r\n    case LOGIN_SUCCESS:\r\n      return {\r\n        ...state,\r\n        isLogin: true,\r\n        isRegistered: true,\r\n        user: { name: action.payload.name, surname: action.payload.surname },\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import {\r\n  CURRENCY_LOADED,\r\n  CURRENCY_LOADING,\r\n  CURRENCY_RATE,\r\n} from \"../Actions/actions\";\r\n\r\nconst initialState = {\r\n  data: [],\r\n  rates: [],\r\n  date: \"\",\r\n  loading: false,\r\n};\r\n\r\nexport const currencyReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case CURRENCY_LOADING:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n        date: new Date(Date.now()).toUTCString(),\r\n      };\r\n    case CURRENCY_LOADED:\r\n      return {\r\n        ...state,\r\n        data: action.payload,\r\n        loading: false,\r\n      };\r\n\r\n    case CURRENCY_RATE:\r\n      return {\r\n        ...state,\r\n        rates: action.payload,\r\n        date: new Date(Date.now()).toUTCString(),\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { PORTFOLIO_START, USER_LOGOUT } from \"../Actions/actions\";\r\n\r\nconst initialState = [];\r\n\r\nexport const portfolioReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case PORTFOLIO_START:\r\n      return action.payload;\r\n    case USER_LOGOUT:\r\n      return [];\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { configureStore } from \"@reduxjs/toolkit\";\nimport { authReducer } from \"./Reducers/authReducer\";\nimport { currencyReducer } from \"./Reducers/currencyReducer\";\nimport { portfolioReducer } from \"./Reducers/portfolioReducer\";\nimport { totalAssetsReducer } from \"./Reducers/totalAssetsReducer\";\n\nexport const store = configureStore({\n  reducer: {\n    auth: authReducer,\n    codes: currencyReducer,\n    portfolioData: portfolioReducer,\n    totalAssets: totalAssetsReducer,\n  },\n});\n","import { GET_TOTAL } from \"../Actions/actions\";\r\n\r\nconst initialState = 1000;\r\n\r\nexport const totalAssetsReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case GET_TOTAL:\r\n      return action.payload;\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport App from './App';\n\nimport { Provider } from 'react-redux';\nimport * as serviceWorker from './serviceWorker';\nimport { store } from './store/store';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}